1. 로딩 화면에서 Login 검사

2. 채팅방 날짜 표시

2022.09.20

1. 확인하지 않은 채팅 수 표시 O

2. DetailItem화면에서 채팅하기 버튼 누르면 바로 채팅방 생기는데 메시지 보내면 채팅방 생기도록 변경하기 O

2022.09.21

1. 채팅 알림 O
    - 버그: 채팅 읽고 나오면 알림 또 옴 -> 채팅방을 나오면
    chatRooms.child(myUid).child(userUid).child("visited").setValue(|true or false|); 로 값이 바뀌게 되고
    ChatRepository -> getMyChatRooms() 메서드의  addChildEventListener() 변경을 감지함.
    visited 값이 false이면 lastMessage를 알림으로 보내도록 했으므로 변경이 일어남과 동시에 알림을 다시 보냄

2022.09.22

1. 채팅 알림 버그 해결 O
    - 버그 내용: 채팅 읽고 채팅방 나오면 알림 중복 발생
        해결
        1. LastMessage class에 checked 필드 추가
        2. ChatRepository getMyChatRooms() 메서드에서 내 채팅방에 변경이 일어날때 알림을 보내는데 이때 조건으로 내가 채팅방에 들어가 있지 않을때 && lastMessage class의 checked가 false일때만 채팅 알림 발생 시킴


2023.04.23

1. repository -> singleton pattern 적용 후 고려할 점
repository안에 있는 MutableLiveData<T> 객체들은 repository가 생성될 때 같이 객체화 되고 그 값을 유지함(LiveData의 생명주기 참고)
새로운 Activity or Fragment에서 해당 값을 사용하려면 사용하기 전 초기화 작업 필요
ex) MutableLiveData<Boolean> itemSave // 중고 물건 저장 완료 확인 liveData
중고 물건 생성 Activity에서 중고 물건을 등록을 완료하면 itemSave에 true값을 넣어서 Activity finish함, 이때 itemSave에는 true값이 계속 저장되어 있음(LiveData 생명주기 && singleton pattern)
문제는 다음 중고 물건을 생성하기 위해 중고 물건 생성 Activity로 이동하게 되면 itemSave에는 이미 true값이 있기때문에 onCreate에서 바로 finish시킴
그러므로 한 Activity에서 한 번 쓰일 값들은 onCreate에서 setValue()로 값을 초기화 시켜주던가 생명주기 메서드를 사용하여 removeObservers를 통해 null시켜줘야 함